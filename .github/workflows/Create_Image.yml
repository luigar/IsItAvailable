
name: Docker Image CI

on:
  push:
    branches:
      - main
      - dev*
  pull_request:
    branches:
      - main
      - dev*

jobs:
  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read  # To checkout the repository
      packages: write # To push to GitHub Packages (GHCR)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        # Enables running builds for other architectures, good practice though not strictly needed for a single amd64 build
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        # Sets up Docker Buildx builder instances
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        # Only log in on push to the main branch (e.g., after a PR merge)
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }} # e.g., ghcr.io/your-username/your-repo-name
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ github.ref_name }},enable=${{ startsWith(github.ref_name, 'dev-') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }} # Push only if it's not a pull_request event
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
